/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 | 
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           | 
|  \\    /   O peration     | Version:  3.0.1                                 | 
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      | 
|    \\/     M anipulation  |                                                 | 
\*---------------------------------------------------------------------------*/ 
FoamFile 
 {
	 version	 2.0;
 	 format	 ascii;
	 class	 dictionary;
	 object	 blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * // 

convertToMeters 1; 
fastMerge	1;
/*     Back o------------------
                              |
                              o

         	   . 5-------------------4
                 .   		         
               .     3 - - - - - - - - - 2
             .	      	                 
           . 	     0-------------------1
         .                             .
       .                             .
     .                             . 
   .                             .
  11-----------------10        . 
    		             . 
  9 - - - - - - - - - 8    .
  	                 .
  6-------------------7 

        o
        |
        --------------------o FRONT

   
    y ^
      |
      o ---> x
     /
   z 

*/



vertices
(
    (0 		0 		0)	// 0
    (9.0 	0 		0)	// 1
    (9.0 	1.0 		0)	// 2
    (0 		1.0 		0)	// 3
    (9.0 	2.0 		0)	// 4
    (0 		2.0 		0)	// 5
    (0 		0 		4.0)	// 6
    (9.0 	0 		4.0)	// 7
    (9.0 	1.0 		4.0)	// 8
    (0 		1.0 		4.0)	// 9
    (9.0        2.0             4.0)    // 10
    (0          2.0             4.0)    // 11
    
);

blocks
(
    hex (0  1  2  3  6  7   8   9) (60 67  60) SimpleGrading (1  12.00048002       1) // bottom 
    hex (3  2  4  5  9  8  10  11) (60 67  60) SimpleGrading (1  0.083329999       1) // top
);

edges
(
);

boundary
(
   inlet
   {
       type 		cyclic;
       neighbourPatch   outlet;
       faces
       (
		(5  3  9 11)
		(3  0  6  9)
       );
   }
   outlet
   {
       type 		cyclic;
       neighbourPatch   inlet;
       faces
       (
		(2  4  10  8)
		(1  2   8  7)
       );
   }
   bottomWall
   {
       type 		wall;
       faces
       (
		(0 1 7 6)
       );
   }
   topWall
   {
       type 		wall;
       faces
       (
		(4 5 11 10)
       );
   }
   left
   {
       type 		cyclic;
       neighbourPatch   right;
       faces
       (
		(3 2 1 0)
		(5 4 2 3)
       );
   }
   right
   {
       type 		cyclic;
       neighbourPatch   left;
       faces
       (
		(6 7  8  9)
		(9 8 10 11)
       );
   }
);

mergePatchPairs
(
);

// ************************************************************************* //
