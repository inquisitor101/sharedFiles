/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 | 
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           | 
|  \\    /   O peration     | Version:  3.0.1                                 | 
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      | 
|    \\/     M anipulation  |                                                 | 
\*---------------------------------------------------------------------------*/ 
FoamFile 
 {
	 version	 2.0;
 	 format	 ascii;
	 class	 dictionary;
	 object	 blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * // 

convertToMeters 1; 
fastMerge	1;
/*     Back o------------------
                              |
                              o

         	   . 9-------------------8
                 .   7		         6
               .     5 - - - - - - - - - 4
             .	     3 	                 2
           . 	     0-------------------1
         .                             .
       .                             .
     .                             . 
   .                             .
  19-----------------18        . 
  17  		     16      . 
  15 - - - - - - - - 14    .
  13	             12  .
  10-----------------11

        o
        |
        --------------------o FRONT

   
    y ^
      |
      o ---> x
     /
   z 

*/



vertices
(
    (0 		0 		0)	// 0
    (9.0 	0 		0)	// 1
    (9.0 	0.2     	0)	// 2
    (0 		0.2     	0)	// 3
    (9.0 	1.0 		0)	// 4
    (0 		1.0 		0)	// 5
    (9.0	1.8      	0)	// 6
    (0 		1.8     	0)	// 7
    (9.0 	2.0 		0)	// 8
    (0 		2.0 		0)	// 9
    (0 		0 		4.0)	// 10
    (9.0 	0 		4.0)	// 11
    (9.0 	0.2     	4.0)	// 12
    (0 		0.2     	4.0)	// 13
    (9.0 	1.0 		4.0)	// 14
    (0 		1.0 		4.0)	// 15
    (9.0 	1.8     	4.0)	// 16
    (0 		1.8     	4.0)	// 17
    (9.0 	2.0 		4.0)	// 18
    (0 		2.0 		4.0)	// 19
);

blocks
(
    hex (0  1  2  3  10  11  12  13) (60 13  60) SimpleGrading (1  12.00048002       1) // bottom: inner layer 
    hex (3  2  4  5  13  12  14  15) (60 20  60) SimpleGrading (1  1	              1) // bottom: outer layer (till core)
    hex (5  4  6  7  15  14  16  17) (60 20  60) SimpleGrading (1  1 		      1) // top:    outer later (till core)
    hex (7  6  8  9  17  16  18  19) (60 13  60) SimpleGrading (1  0.083329999       1) // top:    inner layer
);

edges
(
);

boundary
(
   inlet
   {
       type 		cyclic;
       neighbourPatch   outlet;
       faces
       (
	    	(9 7 17 19)
		(7 5 15 17)
		(5 3 13 15)
		(3 0 10 13)
       );
   }
   outlet
   {
       type 		cyclic;
       neighbourPatch   inlet;
       faces
       (
		(6 8 18 16)
		(4 6 16 14)
		(2 4 14 12)
		(1 2 12 11)
       );
   }
   bottomWall
   {
       type 		wall;
       faces
       (
		(0 1 11 10)
       );
   }
   topWall
   {
       type 		wall;
       faces
       (
		(8 9 19 18)
       );
   }
   left
   {
       type 		cyclic;
       neighbourPatch   right;
       faces
       (
		(3 2 1 0)
		(5 4 2 3)
		(7 6 4 5)
		(9 8 6 7)
       );
   }
   right
   {
       type 		cyclic;
       neighbourPatch   left;
       faces
       (
		(11 12 13 10)
		(12 14 15 13)
		(14 16 17 15)
		(16 18 19 17)
       );
   }
);

mergePatchPairs
(
);

// ************************************************************************* //
